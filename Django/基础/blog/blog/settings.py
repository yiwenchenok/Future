"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!+b3(qtl0c75mn+(aq@lfv7m8(i8g451r5gqx_^kmnn!w+#8a#'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []
# Application definition
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myblog',
    'person', #注册app
    'DjangoUeditor'#注册富文本编辑器 python setup.py install
)


MIDDLEWARE_CLASSES = (
    # 'django.middleware.cache.UpdateCacheMiddleware',  # todo:站点级缓存
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',  #防跨域攻击中间件 ,并没有关掉admin中csrftoken
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    "myblog.middleware.YTMiddleware",  # 自定义中间件
    # 'django.middleware.cache.FetchFromCacheMiddleware',  # todo:站点级缓存

)
ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 配置模板路径
        'APP_DIRS': True,  # 是否允许到应用目录下面去找 templates中的模板
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# 改成mysql数据库 推荐方式：pip install mysqlclient
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'blog',
#         'USER': 'root',  # 数据库账号
#         'PASSWORD': 'root',  # 数据库密码
#         'HOST': '127.0.0.1',  # 数据库主机
#         'PORT': '3306',  # 端口
#     }
# }


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # 静态文件上传的路径,手动创建static

# 上传图片的路径配置
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')
MEDIA_URL = '/static/media/'

# 将session保存到数据库（默认模式）
# SESSION_ENGINE='django.contrib.sessions.backends.db'

# 存储在本机内存
# SESSION_ENGINE='django.contrib.sessions.backends.cache'

# 混合存储：优先从本机内存中存取，如果没有则从数据库中存取
# SESSION_ENGINE='django.contrib.sessions.backends.cached_db'


# 文件缓存系统
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',  # 指定使用文件系统
        'LOCATION': os.path.join(BASE_DIR, 'django_cache'),  # 保存路径，如果没有文件夹，则自动创建
        'TIMEOUT': 60,  # 60秒过期时间
        'OPTIONS': {
            'MAX_ENTRIES': 1000,  # 缓存的条目最大
            "CULL_FREQUENCY": 2,  # 默认设置是3，如果设置为2的话，那就是当缓存条目大于1000条时则删除一半1/2。
        }
    }
}

#邮件发送
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com' # qq邮箱服务器地址
EMAIL_PORT = 25 # smtp端口
#发送邮件的邮箱
EMAIL_HOST_USER = '1820312463@qq.com'
#在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = 'xrntdptgxkjziejb'
#收件人看到的发件人
EMAIL_FROM = '羊驼<1820312463@qq.com>'